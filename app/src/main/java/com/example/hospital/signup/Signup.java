package com.example.hospital.signup;import android.app.ProgressDialog;import android.os.Bundle;import androidx.annotation.NonNull;import androidx.annotation.Nullable;import androidx.databinding.DataBindingUtil;import androidx.fragment.app.Fragment;import androidx.navigation.Navigation;import es.dmoral.toasty.Toasty;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.AdapterView;import android.widget.ArrayAdapter;import android.widget.EditText;import android.widget.Spinner;import android.widget.Toast;import com.example.hospital.R;import com.example.hospital.databinding.FragmentSignupBinding;import com.example.hospital.login.Presenter;import com.google.android.gms.tasks.OnCompleteListener;import com.google.android.gms.tasks.Task;import com.google.firebase.auth.AuthResult;import com.google.firebase.auth.FirebaseAuth;import com.google.firebase.database.DataSnapshot;import com.google.firebase.database.DatabaseError;import com.google.firebase.database.FirebaseDatabase;import com.google.firebase.database.ValueEventListener;import java.util.ArrayList;import java.util.List;/** * A simple {@link Fragment} subclass. */public class Signup extends Fragment implements AdapterView.OnItemSelectedListener {    private FragmentSignupBinding signupBinding;    private FirebaseAuth auth;    private ProgressDialog progressDialog;    private EditText email, password;    private Spinner select_spi, doc_spi;    private User_model user_model;    // List will be use to add data    private List<String> _name=new ArrayList<>();    public Signup() {        // Required empty public constructor    }    @Override    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,                             Bundle savedInstanceState) {        // Inflate the layout for this fragment        /*        Creating the binding         */        signupBinding = DataBindingUtil.inflate(inflater, R.layout.fragment_signup, null, false);        View view = signupBinding.getRoot();        email = view.findViewById(R.id.email);        password = view.findViewById(R.id.password);        select_spi = view.findViewById(R.id.spi_select);        doc_spi = view.findViewById(R.id.spi_doc);        auth = FirebaseAuth.getInstance();        doc_spi.setVisibility(View.INVISIBLE);        progressDialog = new ProgressDialog(getContext());        select_spi.setOnItemSelectedListener(this);        return view;    }    @Override    public void onViewCreated(@NonNull final View view, @Nullable Bundle savedInstanceState) {        super.onViewCreated(view, savedInstanceState);        /*        Geting the data from the database and checking if the selected person if doctor and patient , if it is doctor then adding the name of the doctor to the doc_spinner         */        FirebaseDatabase.getInstance().getReference("Users").addValueEventListener(new ValueEventListener() {            @Override            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {                for(DataSnapshot postsnapshot:dataSnapshot.getChildren()){                    User_model user_model=postsnapshot.getValue(User_model.class);                    Log.d("User_model",user_model.name+" "+user_model.User_name);                    if(user_model.name.equals("Doctor")){                        _name.add(user_model.User_name);                    }                }                Log.d("User_model", String.valueOf(_name));            }            @Override            public void onCancelled(@NonNull DatabaseError databaseError) {            }        });        ArrayAdapter adapter=new ArrayAdapter(getContext(),android.R.layout.simple_spinner_item,_name);        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);        doc_spi.setAdapter(adapter);    }    /*     This override ItemSelector select what category is selected on the select_spinner and signup the user according to the information selected in the spinner whether it is a doctor or patient     */    @Override    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {        switch (position) {            case 0: {                doc_spi.setVisibility(View.GONE);                signupBinding.setEvent(new Presenter() {                    @Override                    public void Signup_Event() {                        Navigation.findNavController(getView()).navigate(R.id.action_signup_to_login);                    }                    @Override                    public void Signin_Event() {                        UserSignup(select_spi.getSelectedItem().toString(), "null");                    }                });                break;            }            case 1: {                doc_spi.setVisibility(View.VISIBLE);                signupBinding.setEvent(new Presenter() {                    @Override                    public void Signup_Event() {                        Navigation.findNavController(getView()).navigate(R.id.action_signup_to_login);                    }                    @Override                    public void Signin_Event() {                        UserSignup(select_spi.getSelectedItem().toString(), doc_spi.getSelectedItem().toString());                    }                });                Log.d("Main", select_spi.getSelectedItem().toString());                break;            }        }    }    @Override    public void onNothingSelected(AdapterView<?> parent) {    }    /*    This method takes two parameters the "person" whether if the person is doctor or patient    and "doc_name" if it is a patient then the doc name is whatever he has selected and if a doctor then the doc_name is null    This method takes gmail and password from the edit text and creates TWO databases one for auth and other for user other data like name, doctor , patient, doc_name etc.     */    public void UserSignup(final String person, final String doc_name) {        String _email = email.getText().toString();        String _password = password.getText().toString();        String _User_name=signupBinding.name.getText().toString();        if (_email.isEmpty() || _password.isEmpty()||_User_name.isEmpty()) {            Toasty.error(getContext(), "Enter email and password", Toast.LENGTH_LONG).show();        } else {            progressDialog.show();            progressDialog.setMessage("Please wait......");            auth.createUserWithEmailAndPassword(_email, _password).addOnCompleteListener(new OnCompleteListener<AuthResult>() {                @Override                public void onComplete(@NonNull Task<AuthResult> task) {                    if (task.isSuccessful()) {                        user_model = new User_model(person, doc_name, String.valueOf(email.getText()),_User_name);                        FirebaseDatabase.getInstance().getReference("Users")                                .child(FirebaseAuth.getInstance().getCurrentUser().getUid())                                .setValue(user_model).addOnCompleteListener(new OnCompleteListener<Void>() {                            @Override                            public void onComplete(@NonNull Task<Void> task) {                                if (task.isSuccessful()) {                                    Toasty.success(getContext(), "You can sign in now!!!!", Toast.LENGTH_LONG, true).show();                                    progressDialog.dismiss();                                    email.setText("");                                    password.setText("");                                } else if (task.isCanceled()) {                                    Toasty.error(getContext(), "Error!!!!", Toast.LENGTH_LONG, true).show();                                    progressDialog.dismiss();                                    email.setText("");                                    password.setText("");                                }                            }                        });                    }                    if (task.isCanceled()) {                        Toasty.warning(getContext(), "Some thing went wrong", Toast.LENGTH_LONG, true).show();                        progressDialog.dismiss();                    }                    if (task.isComplete()) {                        Toasty.success(getContext(), "You can Login now", Toast.LENGTH_LONG, true).show();                        progressDialog.dismiss();                    }                }            });        }    }}